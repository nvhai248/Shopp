# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Product {
  id: ID!
  name: String
  description: String
  categoryId: String
  publisherId: String
  price: Float
  priceSale: Float
  isOnSale: Boolean
  avatar: String
  author: [String!]
  images: [String!]
  status: String
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type PagingProduct {
  data: [Product!]!
  page: Int
  limit: Int
  total: Int
}

type CategoryChild {
  id: ID!
  name: String!
  description: String
  type: String!
  parentId: String
  status: Boolean!
  createdBy: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Category {
  id: ID!
  name: String!
  description: String
  type: String!
  status: Boolean!
  createdBy: String!
  childs: [CategoryChild!]!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Cart {
  productId: ID!
  userId: ID!
  name: String!
  avatar: String!
  quantity: Float!
  price: Float!
}

type User {
  id: ID!
  firstName: String
  lastName: String
  email: String!
  birthDate: String
  phoneNumber: String
  gender: String
  avatar: String
  status: String!
  cart: [Cart!]!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type AuthResponse {
  accessToken: String
  expired_accessToken: Float
  refreshToken: String
  expired_refreshToken: Float
}

type LogoutResponse {
  result: Boolean
}

type Publisher {
  id: ID!
  name: String!
  description: String!
  avatar: String!
  status: Boolean!
  createdBy: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Query {
  products(page: Int, limit: Int): PagingProduct!
  product(id: String!): Product!
  categories: [Category!]!
  category(id: String!): Category!
  users: [User!]!
  user(id: ID!): User!
  getProfile: User!
  adminGetProfile: User!
  publishers: [Publisher!]!
  publisher(id: String!): Publisher!
}

type Mutation {
  createProduct(createProductInput: CreateProductInput!): Product!
  updateProduct(updateProductInput: UpdateProductInput!): Boolean!
  createCategory(createCategoryInput: CreateCategoryInput!): Category!
  updateCategory(updateCategoryInput: UpdateCategoryInput!): Boolean!
  removeCategoryParent(id: String!): Boolean!
  requireSendEmailVerifyUser: Boolean!
  verifyUser(otp: String!): Boolean!
  updateProfile(updateUserInput: UpdateUserInput!): User!
  removeUser(id: ID!): User!
  requireSendEmailResetPassword(email: String!): Boolean!
  refreshUserPassword(userRefreshPasswordInput: UserRefreshPasswordInput!): Boolean!
  changePassword(changePasswordInput: ChangePasswordInput!): Boolean!
  addProductToCart(productId: String!, quantity: Float!): Cart!
  login(loginInput: LoginInput!): AuthResponse!
  adminLogin(loginInput: AdminLoginInput!): AuthResponse!
  register(registerInput: RegisterInput!): AuthResponse!
  logout: LogoutResponse!
  refreshAccessToken: AuthResponse!
  createPublisher(createPublisherInput: CreatePublisherInput!): Publisher!
  updatePublisher(updatePublisherInput: UpdatePublisherInput!): Boolean!
}

input CreateProductInput {
  name: String!
  description: String!
  categoryId: String!
  publisherId: String!
  price: Float!
  avatar: String
  author: [String!]
  images: [String!]
}

input UpdateProductInput {
  id: ID!
  name: String
  description: String
  categoryId: String
  publisherId: String
  price: Float
  priceSale: Float
  isOnSale: Boolean
  avatar: String
  author: [String!]
  images: [String!]
  status: String
}

input CreateCategoryInput {
  name: String!
  description: String
  type: String!
  parentId: String
}

input UpdateCategoryInput {
  id: ID!
  name: String
  description: String
  type: String
  parentId: String
  status: Boolean
}

input UpdateUserInput {
  firstName: String
  lastName: String
  birthDate: String
  phoneNumber: String
  gender: String
}

input UserRefreshPasswordInput {
  id: String!
  token: String!
  password: String!
}

input ChangePasswordInput {
  currentPassword: String!
  newPassword: String!
}

input LoginInput {
  email: String!
  password: String!
  isRememberMe: Boolean! = false
}

input AdminLoginInput {
  email: String!
  password: String!
}

input RegisterInput {
  email: String!
  password: String!
}

input CreatePublisherInput {
  name: String!
  description: String!
  avatar: String!
}

input UpdatePublisherInput {
  id: ID!
  name: String
  description: String
  avatar: String
  status: Boolean
}